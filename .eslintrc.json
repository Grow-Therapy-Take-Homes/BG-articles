{
  "root": true,
  "env": { "browser": true, "es2020": true },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin"
  ],
  "ignorePatterns": ["dist", ".eslintrc.json"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": ["./tsconfig.json"]
  },
  "plugins": ["@typescript-eslint", "react-hooks", "react", "import", "react-refresh"],
  "rules": {
    "react/react-in-jsx-scope": "off",
    "react-refresh/only-export-components": ["error", { "allowConstantExport": true }],
    "react/jsx-boolean-value": "error",
    "react/jsx-sort-props": [
      "error",
      {
        "locale": "en-US",
        "reservedFirst": true,
        "shorthandFirst": true,
        "multiline": "ignore",
        "ignoreCase": true,
        "callbacksLast": true
      }
    ],
    "import/no-unresolved": "off",
    "import/newline-after-import": "error",
    "import/first": "error",
    "import/no-useless-path-segments": "error",
    "import/no-empty-named-blocks": "error",
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", ["internal", "unknown"], "parent", "sibling", "index"],
        "newlines-between": "never",
        "pathGroups": [
          {
            "pattern": "react",
            "group": "builtin",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"]
      }
    ],
    "import/no-named-as-default-member": "off",
    "@typescript-eslint/consistent-type-definitions": ["error", "type"],
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/class-literal-property-style": "error",
    "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "as" }],
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/no-duplicate-type-constituents": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-import-type-side-effects": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "@typescript-eslint/no-meaningless-void-operator": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-mixed-enums": "error",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-redundant-type-constituents": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unsafe-enum-comparison": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-useless-empty-export": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-literal-enum-member": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/sort-type-constituents": "error",

    /** Extension Rules */
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": "error",
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": "error",
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": "error",
    "no-redeclare": "off",
    "@typescript-eslint/no-redeclare": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-throw-literal": "off",
    "@typescript-eslint/no-throw-literal": "error",
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "error"
  }
}
